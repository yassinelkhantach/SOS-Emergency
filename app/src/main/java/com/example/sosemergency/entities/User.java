package com.example.sosemergency.entities;

import androidx.room.Entity;
import androidx.room.Ignore;
import androidx.room.PrimaryKey;
import androidx.room.TypeConverters;

import com.example.sosemergency.DataLoader.UserDatabaseContract;
import com.example.sosemergency.utils.DateConverterUtil;

import java.util.Date;
/*
 * This class represents the User entity in the Room database. It is annotated with
 * @Entity to indicate that it is a database entity, and it includes information about
 * the table name in the database.
 *
 * @Entity annotation parameters:
 *   tableName - The name of the "users" table in the database.
 *
 * Fields:
 *   - id: The primary key for the user, auto-generated by Room.
 *   - name: The name of the user.
 *   - birthDate: The birth date of the user. Utilizes a TypeConverter for Date to Long conversion.
 *   - bloodType: The blood type of the user.
 *   - height: The height of the user.
 *   - weight: The weight of the user.
 *   - country: The country of residence of the user.
 *
 */
@Entity(tableName = UserDatabaseContract.ContactEntry.TABLE_NAME)
@TypeConverters(DateConverterUtil.class)
public class User {

    @PrimaryKey(autoGenerate = true)
    public Long id;

    public String name;
    public Date birthDate;
    public String bloodType;
    public double height;
    public double weight;
    public String country;

    /*
     * Constructor for basic user information.
     *
     * @param name - The name of the user.
     * @param birthDate - The birth date of the user.
     * @param country - The country of residence of the user.
     */
    public User(String name, Date birthDate, String country) {
        this.name = name;
        this.birthDate = birthDate;
        this.country = country;
    }

    /*
     * Constructor for additional health information.
     *
     * @param bloodType - The blood type of the user.
     * @param height - The height of the user.
     * @param weight - The weight of the user.
     */
    @Ignore
    public User(String bloodType, double height, double weight) {
        this.bloodType = bloodType;
        this.height = height;
        this.weight = weight;
    }

    /*
     * Constructor for all user information.
     *
     * @param name - The name of the user.
     * @param birthDate - The birth date of the user.
     * @param bloodType - The blood type of the user.
     * @param height - The height of the user.
     * @param weight - The weight of the user.
     * @param country - The country of residence of the user.
     */
    @Ignore
    public User(String name, Date birthDate, String bloodType, double height, double weight, String country) {
        this.name = name;
        this.birthDate = birthDate;
        this.bloodType = bloodType;
        this.height = height;
        this.weight = weight;
        this.country = country;
    }

    /*
     * Getter method for the user's ID.
     *
     * @return long - The ID of the user.
     */
    public long getId() {
        return id;
    }

    /*
     * Setter method for the user's ID.
     *
     * @param id - The ID to set for the user.
     */
    public void setId(long id) {
        this.id = id;
    }

    /*
     * Getter method for the user's name.
     *
     * @return String - The name of the user.
     */
    public String getName() {
        return name;
    }

    /*
     * Setter method for the user's name.
     *
     * @param name - The name to set for the user.
     */
    public void setName(String name) {
        this.name = name;
    }

    /*
     * Getter method for the user's birth date.
     *
     * @return Date - The birth date of the user.
     */
    public Date getBirthDate() {
        return birthDate;
    }

    /*
     * Setter method for the user's birth date.
     *
     * @param birthDate - The birth date to set for the user.
     */
    public void setBirthDate(Date birthDate) {
        this.birthDate = birthDate;
    }

    /*
     * Getter method for the user's blood type.
     *
     * @return String - The blood type of the user.
     */
    public String getBloodType() {
        return bloodType;
    }

    /*
     * Setter method for the user's blood type.
     *
     * @param bloodType - The blood type to set for the user.
     */
    public void setBloodType(String bloodType) {
        this.bloodType = bloodType;
    }

    /*
     * Getter method for the user's height.
     *
     * @return double - The height of the user.
     */
    public double getHeight() {
        return height;
    }

    /*
     * Setter method for the user's height.
     *
     * @param height - The height to set for the user.
     */
    public void setHeight(double height) {
        this.height = height;
    }

    /*
     * Getter method for the user's weight.
     *
     * @return double - The weight of the user.
     */
    public double getWeight() {
        return weight;
    }

    /*
     * Setter method for the user's weight.
     *
     * @param weight - The weight to set for the user.
     */
    public void setWeight(double weight) {
        this.weight = weight;
    }

    /*
     * Getter method for the user's country.
     *
     * @return String - The country of residence of the user.
     */
    public String getCountry() {
        return country;
    }

    /*
     * Setter method for the user's country.
     *
     * @param country - The country to set for the user.
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /*
     * Overrides the default toString method to provide a string representation
     * of the User object for easy debugging.
     *
     * @return String - The string representation of the User object.
     */

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", birthDate=" + birthDate +
                ", bloodType='" + bloodType + '\'' +
                ", height=" + height +
                ", weight=" + weight +
                ", country='" + country + '\'' +
                '}';
    }
}